import numpy as np
import matplotlib.pyplot as plt

epsilon = 1e-8


def distance(a, b):
    return np.sqrt((a[0] - b[0]) ** 2 + (a[1] - b[1]) ** 2)


def orient(p, q, r):
    result = (p[0] - r[0]) * (q[1] - r[1]) - (p[1] - r[1]) * (q[0] - r[0])
    if result > epsilon:
        return 1
    elif result < -epsilon:
        return -1
    else:
        return 0


def greedy_selecting(points):
    # handle 1 point cluster
    if len(points) <= 1:
        return points[0]

    num_of_sets = len(points)
    first_points_set = set(points[0])

    p0 = min(points[0], key=lambda x: (x[1], x[0]))

    # actual points to return
    outline_points = []

    i_array = 1

    # lists of considered points
    current_points_array = points[0]
    next_points_array = points[1]

    # point that is currently handle
    current_point = p0
    # print(f"Current points: {current_point}")
    second_point = next_points_array[0]
    # last point considered
    last_point = (
        current_points_array[0]
        if current_points_array[0] != p0
        else current_points_array[1]
    )

    # print("WITAM")

    while True:

        # create new set of points
        points_union = current_points_array + next_points_array
        print(points_union)
        for i in range(len(points_union)):
            # if points_union[i] in next_points_array and orient(current_point, second_point, points_union[i]) == 1:
            # #    (orient(current_point, second_point, points_union[i]) == 0 and distance(second_point, current_point) < distance(current_point, current_point[i])):
            #     second_point = points_union[i]

            if orient(current_point, last_point, points_union[i]) == 1:
                if points_union[i] in next_points_array:
                    second_point = points_union[i]
                last_point = points_union[i]

        current_point = last_point

        if second_point in first_points_set:
            break
        if current_point not in current_points_array:
            i_array += 1
            current_points_array = next_points_array
            next_points_array = points[i_array % len(points)]

        outline_points.append(current_point)

    return outline_points


if __name__ == "__main__":
    fig, ax = plt.subplots()
    points = [
        [
            (-13995221.48304, 24076552.49225),
            (-14186204.488665052, 24664337.744542472),
            (-14686204.488665052, 25027609.008545153),
            (-15304238.477414947, 25027609.008545153),
            (-15804238.477414947, 24664337.744542472),
            (-15995221.48304, 24076552.49225),
            (-15804238.477414947, 23488767.239957526),
            (-15304238.477414947, 23125495.975954846),
            (-14686204.488665052, 23125495.975954846),
            (-14186204.488665052, 23488767.239957526),
        ],
        [
            (-13085932.28037, 25162927.34214),
            (-13276915.285995053, 25750712.594432473),
            (-13776915.285995053, 26113983.858435154),
            (-14394949.274744948, 26113983.858435154),
            (-14894949.274744948, 25750712.594432473),
            (-15085932.28037, 25162927.34214),
            (-14894949.274744948, 24575142.089847527),
            (-14394949.274744948, 24211870.825844847),
            (-13776915.285995053, 24211870.825844847),
            (-13276915.285995053, 24575142.089847527),
        ],
        [
            (-12125465.96826, 26136525.04052),
            (-12316448.973885052, 26724310.292812474),
            (-12816448.973885052, 27087581.556815155),
            (-13434482.962634947, 27087581.556815155),
            (-13934482.962634947, 26724310.292812474),
            (-14125465.96826, 26136525.04052),
            (-13934482.962634947, 25548739.78822753),
            (-13434482.962634947, 25185468.524224848),
            (-12816448.973885052, 25185468.524224848),
            (-12316448.973885052, 25548739.78822753),
        ],
        [
            (-10584867.93225, 26922248.60319),
            (-10775850.937875053, 27510033.855482474),
            (-11275850.937875053, 27873305.119485155),
            (-11893884.926624948, 27873305.119485155),
            (-12393884.926624948, 27510033.855482474),
            (-12584867.93225, 26922248.60319),
            (-12393884.926624948, 26334463.35089753),
            (-11893884.926624948, 25971192.086894847),
            (-11275850.937875053, 25971192.086894847),
            (-10775850.937875053, 26334463.35089753),
        ],
        [
            (-8215236.23466, 28878188.44264),
            (-8406219.240285052, 29465973.694932472),
            (-8906219.240285052, 29829244.958935153),
            (-9524253.229034947, 29829244.958935153),
            (-10024253.229034947, 29465973.694932472),
            (-10215236.23466, 28878188.44264),
            (-10024253.229034947, 28290403.190347526),
            (-9524253.229034947, 27927131.926344845),
            (-8906219.240285052, 27927131.926344845),
            (-8406219.240285052, 28290403.190347526),
        ],
        [
            (-6732931.21554, 29521174.55796),
            (-6923914.221165053, 30108959.810252473),
            (-7423914.221165053, 30472231.074255154),
            (-8041948.209914948, 30472231.074255154),
            (-8541948.209914947, 30108959.810252473),
            (-8732931.21554, 29521174.55796),
            (-8541948.209914947, 28933389.305667527),
            (-8041948.209914948, 28570118.041664846),
            (-7423914.221165053, 28570118.041664846),
            (-6923914.221165053, 28933389.305667527),
        ],
        [
            (-3264665.60991, 31005824.36949),
            (-3455648.6155350525, 31593609.621782474),
            (-3955648.6155350525, 31956880.885785155),
            (-4573682.604284948, 31956880.885785155),
            (-5073682.604284948, 31593609.621782474),
            (-5264665.60991, 31005824.36949),
            (-5073682.604284948, 30418039.11719753),
            (-4573682.604284948, 30054767.853194848),
            (-3955648.615535053, 30054767.853194848),
            (-3455648.6155350525, 30418039.11719753),
        ],
        [
            (-4265057.75699, 30794804.34061),
            (-4456040.762615052, 31382589.592902474),
            (-4956040.762615052, 31745860.856905155),
            (-5574074.751364947, 31745860.856905155),
            (-6074074.751364947, 31382589.592902474),
            (-6265057.75699, 30794804.34061),
            (-6074074.751364947, 30207019.08831753),
            (-5574074.751364947, 29843747.824314848),
            (-4956040.762615052, 29843747.824314848),
            (-4456040.762615052, 30207019.08831753),
        ],
        [
            (-5141037.80276, 30533795.50693),
            (-5332020.808385053, 31121580.759222474),
            (-5832020.808385053, 31484852.023225155),
            (-6450054.797134948, 31484852.023225155),
            (-6950054.797134948, 31121580.759222474),
            (-7141037.80276, 30533795.50693),
            (-6950054.797134948, 29946010.25463753),
            (-6450054.797134948, 29582738.990634847),
            (-5832020.808385053, 29582738.990634847),
            (-5332020.808385053, 29946010.25463753),
        ],
        [
            (-5905829.60644, 29963648.08032),
            (-6096812.612065053, 30551433.332612474),
            (-6596812.612065053, 30914704.596615154),
            (-7214846.600814948, 30914704.596615154),
            (-7714846.600814948, 30551433.332612474),
            (-7905829.60644, 29963648.08032),
            (-7714846.600814948, 29375862.828027528),
            (-7214846.600814948, 29012591.564024847),
            (-6596812.612065053, 29012591.564024847),
            (-6096812.612065053, 29375862.828027528),
        ],
        [
            (-7682802.2326, 29684509.25019),
            (-7873785.238225052, 30272294.502482474),
            (-8373785.238225052, 30635565.766485155),
            (-8991819.226974947, 30635565.766485155),
            (-9491819.226974947, 30272294.502482474),
            (-9682802.2326, 29684509.25019),
            (-9491819.226974947, 29096723.997897528),
            (-8991819.226974947, 28733452.733894847),
            (-8373785.238225052, 28733452.733894847),
            (-7873785.238225052, 29096723.997897528),
        ],
        [
            (-9228350.28342, 28811258.28048),
            (-9419333.289045053, 29399043.532772474),
            (-9919333.289045053, 29762314.796775155),
            (-10537367.277794948, 29762314.796775155),
            (-11037367.277794948, 29399043.532772474),
            (-11228350.28342, 28811258.28048),
            (-11037367.277794948, 28223473.02818753),
            (-10537367.277794948, 27860201.764184847),
            (-9919333.289045053, 27860201.764184847),
            (-9419333.289045053, 28223473.02818753),
        ],
        [
            (-9584129.6686, 27897472.68393),
            (-9775112.674225053, 28485257.93622247),
            (-10275112.674225053, 28848529.200225152),
            (-10893146.662974948, 28848529.200225152),
            (-11393146.662974948, 28485257.93622247),
            (-11584129.6686, 27897472.68393),
            (-11393146.662974948, 27309687.431637526),
            (-10893146.662974948, 26946416.167634845),
            (-10275112.674225053, 26946416.167634845),
            (-9775112.674225053, 27309687.431637526),
        ],
        [
            (-11080697.16004, 28058413.47821),
            (-11271680.165665053, 28646198.73050247),
            (-11771680.165665053, 29009469.994505152),
            (-12389714.154414948, 29009469.994505152),
            (-12889714.154414948, 28646198.73050247),
            (-13080697.16004, 28058413.47821),
            (-12889714.154414948, 27470628.225917526),
            (-12389714.154414948, 27107356.961914845),
            (-11771680.165665053, 27107356.961914845),
            (-11271680.165665053, 27470628.225917526),
        ],
        [
            (-12084069.53623, 27203521.24988),
            (-12275052.541855052, 27791306.502172474),
            (-12775052.541855052, 28154577.766175155),
            (-13393086.530604947, 28154577.766175155),
            (-13893086.530604947, 27791306.502172474),
            (-14084069.53623, 27203521.24988),
            (-13893086.530604947, 26615735.997587528),
            (-13393086.530604947, 26252464.733584847),
            (-12775052.541855052, 26252464.733584847),
            (-12275052.541855052, 26615735.997587528),
        ],
        [
            (-13452228.03472, 26200792.48201),
            (-13643211.040345052, 26788577.734302472),
            (-14143211.040345052, 27151848.998305153),
            (-14761245.029094948, 27151848.998305153),
            (-15261245.029094948, 26788577.734302472),
            (-15452228.03472, 26200792.48201),
            (-15261245.029094948, 25613007.229717527),
            (-14761245.029094948, 25249735.965714846),
            (-14143211.040345052, 25249735.965714846),
            (-13643211.040345052, 25613007.229717527),
        ],
        [
            (-14899568.6771, 24750677.50206),
            (-15090551.682725053, 25338462.754352473),
            (-15590551.682725053, 25701734.018355154),
            (-16208585.671474949, 25701734.018355154),
            (-16708585.671474949, 25338462.754352473),
            (-16899568.677100003, 24750677.50206),
            (-16708585.671474949, 24162892.249767527),
            (-16208585.671474949, 23799620.985764846),
            (-15590551.682725053, 23799620.985764846),
            (-15090551.682725053, 24162892.249767527),
        ],
        [
            (-15560909.67986, 23591301.97459),
            (-15751892.685485052, 24179087.226882473),
            (-16251892.685485052, 24542358.490885153),
            (-16869926.674234945, 24542358.490885153),
            (-17369926.674234945, 24179087.226882473),
            (-17560909.67986, 23591301.97459),
            (-17369926.674234945, 23003516.722297527),
            (-16869926.674234945, 22640245.458294846),
            (-16251892.685485052, 22640245.458294846),
            (-15751892.685485052, 23003516.722297527),
        ],
        [
            (-15704284.66537, 22581770.96687),
            (-15895267.670995053, 23169556.21916247),
            (-16395267.670995053, 23532827.483165152),
            (-17013301.65974495, 23532827.483165152),
            (-17513301.65974495, 23169556.21916247),
            (-17704284.665370002, 22581770.96687),
            (-17513301.65974495, 21993985.714577526),
            (-17013301.65974495, 21630714.450574845),
            (-16395267.670995053, 21630714.450574845),
            (-15895267.670995053, 21993985.714577526),
        ],
        [
            (-16369391.63896, 21638227.79453),
            (-16560374.644585053, 22226013.046822473),
            (-17060374.644585054, 22589284.310825154),
            (-17678408.633334946, 22589284.310825154),
            (-18178408.633334946, 22226013.046822473),
            (-18369391.63896, 21638227.79453),
            (-18178408.633334946, 21050442.542237528),
            (-17678408.633334946, 20687171.278234847),
            (-17060374.644585054, 20687171.278234847),
            (-16560374.644585053, 21050442.542237528),
        ],
    ]
    i = 0
    # outline_points = greedy_selecting(points)
    # print(outline_points)
    for point in points:
        point = np.array(point)
        if i == 0:
            ax.scatter(point[:, 0], point[:, 1], s=20, color = "black")
        elif i == 1:
            ax.scatter(point[:, 0], point[:, 1], s=20, color = "blue")
        else:
            ax.scatter(point[:, 0], point[:, 1], s=20, color = "red")
        i += 1
    plt.show()
